{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": ["dev", "prod"],
      "metadata": {
        "description": "Environment name (dev/prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "East Asia",
      "allowedValues": ["East Asia", "Southeast Asia"],
      "metadata": {
        "description": "Azure region for deployment"
      }
    },
    "databasePassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 41,
      "metadata": {
        "description": "Password for MySQL database"
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "jobboard",
      "metadata": {
        "description": "Project name prefix for resources"
      }
    },
    "githubToken": {
      "type": "securestring",
      "metadata": {
        "description": "GitHub token for repository access"
      }
    }
  },
  "variables": {
    "resourceNamePrefix": "[format('{0}-{1}', parameters('projectName'), parameters('environment'))]",
    "keyVaultName": "[format('{0}-kv', variables('resourceNamePrefix'))]",
    "storageAccountName": "[format('{0}stg', toLower(replace(variables('resourceNamePrefix'), '-', '')))]",
    "containerRegistryName": "[format('{0}acr', toLower(replace(variables('resourceNamePrefix'), '-', '')))]",
    "mysqlServerName": "[format('{0}-mysql', variables('resourceNamePrefix'))]",
    "staticWebAppName": "[format('{0}-swa', variables('resourceNamePrefix'))]",
    "containerAppName": "[format('{0}-api', variables('resourceNamePrefix'))]",
    "logAnalyticsName": "[format('{0}-logs', variables('resourceNamePrefix'))]",
    "appInsightsName": "[format('{0}-insights', variables('resourceNamePrefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "sku": {
        "family": "A",
        "name": "standard"
      },
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/database-password', variables('keyVaultName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('databasePassword')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "allowBlobPublicAccess": true,
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true,
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/flexibleServers",
      "apiVersion": "2023-06-30",
      "name": "[variables('mysqlServerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_B1ms",
        "tier": "Burstable"
      },
      "properties": {
        "administratorLogin": "jobboard_admin",
        "administratorLoginPassword": "[parameters('databasePassword')]",
        "version": "8.0.21",
        "storage": {
          "storageSizeGB": 20,
          "autoGrow": "Disabled"
        },
        "backup": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "highAvailability": {
          "mode": "Disabled"
        },
        "maintenanceWindow": {
          "customWindow": "Disabled",
          "dayOfWeek": 0,
          "startHour": 0,
          "startMinute": 0
        },
        "createMode": "Default"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/flexibleServers/databases",
      "apiVersion": "2023-06-30",
      "name": "[format('{0}/jobboard', variables('mysqlServerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/flexibleServers', variables('mysqlServerName'))]"
      ],
      "properties": {
        "charset": "utf8mb4",
        "collation": "utf8mb4_unicode_ci"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/flexibleServers/firewallRules",
      "apiVersion": "2023-06-30",
      "name": "[format('{0}/AllowAll', variables('mysqlServerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/flexibleServers', variables('mysqlServerName'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ],
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      }
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2022-09-01",
      "name": "[variables('staticWebAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryUrl": "https://github.com/your-username/jobboard-devops-project",
        "branch": "[if(equals(parameters('environment'), 'prod'), 'main', 'develop')]",
        "repositoryToken": "[parameters('githubToken')]",
        "buildProperties": {
          "appLocation": "/",
          "apiLocation": "backend",
          "appBuildCommand": "cd frontend && npm run build",
          "apiBuildCommand": "npm run build",
          "outputLocation": "build"
        }
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "[variables('containerAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
        "[resourceId('Microsoft.DBforMySQL/flexibleServers', variables('mysqlServerName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-env', variables('resourceNamePrefix')))]",
        "configuration": {
          "secrets": [
            {
              "name": "database-password",
              "value": "[parameters('databasePassword')]"
            }
          ],
          "activeRevisionsMode": "Single",
          "ingress": {
            "external": true,
            "targetPort": 3001,
            "transport": "http",
            "traffic": [
              {
                "weight": 100,
                "latestRevision": true
              }
            ]
          }
        },
        "template": {
          "containers": [
            {
              "name": "backend",
              "image": "[format('{0}.azurecr.io/jobboard-backend:latest', variables('containerRegistryName'))]",
              "resources": {
                "cpu": 0.5,
                "memory": "1Gi"
              },
              "env": [
                {
                  "name": "NODE_ENV",
                  "value": "production"
                },
                {
                  "name": "DB_HOST",
                  "value": "[reference(resourceId('Microsoft.DBforMySQL/flexibleServers', variables('mysqlServerName'))).fullyQualifiedDomainName]"
                },
                {
                  "name": "DB_USER",
                  "value": "jobboard_admin"
                },
                {
                  "name": "DB_PASSWORD",
                  "secretRef": "database-password"
                },
                {
                  "name": "DB_NAME",
                  "value": "jobboard"
                },
                {
                  "name": "DB_PORT",
                  "value": "3306"
                },
                {
                  "name": "PORT",
                  "value": "3001"
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 0,
            "maxReplicas": 10,
            "rules": [
              {
                "name": "http-scale-rule",
                "http": {
                  "metadata": {
                    "concurrentRequests": "100"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "staticWebAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName'))).defaultHostname]"
    },
    "containerAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', variables('containerAppName'))).configuration.ingress.fqdn]"
    },
    "mysqlServerName": {
      "type": "string",
      "value": "[variables('mysqlServerName')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "[variables('containerRegistryName')]"
    }
  }
}