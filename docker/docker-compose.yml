version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: jobboard-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-jobboard}
      MYSQL_USER: ${DB_USER:-jobboard_user}
      MYSQL_PASSWORD: ${DB_PASS:-jobboard_pass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./../scripts/setup-db.sql:/docker-entrypoint-initdb.d/setup-db.sql
    networks:
      - jobboard-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: jobboard-backend
    restart: unless-stopped
    environment:
      DB_HOST: mysql
      DB_USER: ${DB_USER:-jobboard_user}
      DB_PASS: ${DB_PASS:-jobboard_pass}
      DB_NAME: ${DB_NAME:-jobboard}
      PORT: 3001
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - jobboard-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Application
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: jobboard-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - jobboard-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local

networks:
  jobboard-network:
    driver: bridge